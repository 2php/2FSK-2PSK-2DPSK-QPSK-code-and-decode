
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DPSK(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,

	//////////// SDRAM //////////
	output		    [12:0]		DRAM_ADDR,
	output		     [1:0]		DRAM_BA,
	output		          		DRAM_CAS_N,
	output		          		DRAM_CKE,
	output		          		DRAM_CLK,
	output		          		DRAM_CS_N,
	inout 		    [15:0]		DRAM_DQ,
	output		          		DRAM_LDQM,
	output		          		DRAM_RAS_N,
	output		          		DRAM_UDQM,
	output		          		DRAM_WE_N,

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// VGA //////////
	output		     [3:0]		VGA_B,
	output		     [3:0]		VGA_G,
	output		          		VGA_HS,
	output		     [3:0]		VGA_R,
	output		          		VGA_VS,

	//////////// Accelerometer //////////
	output		          		GSENSOR_CS_N,
	input 		     [2:1]		GSENSOR_INT,
	output		          		GSENSOR_SCLK,
	inout 		          		GSENSOR_SDI,
	inout 		          		GSENSOR_SDO,

	//////////// Arduino //////////
	inout 		    [15:0]		ARDUINO_IO,
	inout 		          		ARDUINO_RESET_N,




//=======================================================
//  REG/WIRE declarations
//=======================================================

   output clk_1,
	output clk_2,
	output clk_4,
	output clk_20,
	output  signed [7:0]sine,
	output  signed [7:0]cos,
   output  seq,
	output [7:0]tz_seq,
	output jt_seq,
	output[9:0] phase

);
//=======================================================
//  Structural coding
//=======================================================

pll PLL( //suoxianghuan
      .inclk0(MAX10_CLK1_50),
		.c0(clk_1),
	   .c4(clk_4),
		.c2(clk_2),
		.c3(clk_20)
);

dds DDS( //xinhaofasheng
      .clk(MAX10_CLK1_50),
		.cos(cos),
      .sine(sine),
	   .phase(phase),
		.rst_n(KEY[0])
);



qseq QSEQ(//shezhipinglv
      .clk(clk_1),
		.seq(seq)

);
    
dpsk_tz DPSK_TZ( 
     .clk_2(clk_1),
	  .seq(seq),
	  .cos(cos),
	  .tz_seq(tz_seq),
	  .phase(phase)
);

dpsk_jt DPSK_JT(
    
    .clk_2(clk_1),
	 .clk_4(clk_4),
	 .clk_20(clk_20),
	 .tz_seq(tz_seq),
	 .jt_seq(jt_seq)
);






endmodule
